Jenkins, the definitive guide=John;Note=Erxin

# Introducing
- reference 
https://learning.oreilly.com/library/view/jenkins-the-definitive/9781449311155/

- install jenkins 
- install git 
- start jenkins server 

$ java -jar jenkins.war

navigate to 
http://localhost:8080

configure proxy 

manage jdk 

setting up git 

add plugin, Manage Plugins. This will open the plugin configuration screen, which is where you manage the extra features 

- add code coverage and metrics 

- add test result trend 


# installing jenkins 
- install jenkins 2.7 and java 1.7 the java version should match the jenkins requirements 
- no matter where you store the Jenkins WAR file, Jenkins keeps all its important data in a special separate directory called the Jenkins home directory

build server configuration, your build jobs, build artifacts, user accounts, and other useful information, as well as any plugins you may have installed.

jenkins honme is backward compatible and it can be seperated from jenkins itself 

Windows 7, if your username is “john”, you would find the Jenkins home directory under C:\Users\john\.jenkins

- force Jenkins to use a different directory as its home directory by defining the JENKINS_HOME environment variable

- Jenkins can be as simple as replacing the old hudson.war file with jenkins.war. Jenkins will look for its home directory in the following places (by order of precedence):

A JNDI environment entry called JENKINS_HOME

A JNDI environment entry called HUDSON_HOME

A system property named JENKINS_HOME

A system property named HUDSON_HOME

An environment variable named JENKINS_HOME

An environment variable named HUDSON_HOME

The .hudson directory in the user’s home directory, if it already exists

The .jenkins directory in the user’s home directory

- install jenkins as a standalone application 

you can specify the port manually, using the --httpPort option:

$ java -jar jenkins.war --httpPort=8081

- jenkins can also be installed with web services 

- Jenkins naturally needs RAM to run, but if you need to support a large number of build processes, it is not enough just to give Jenkins a lot of memory. In fact Jenkins spawns a new Java process each time it kicks off a build

- jenkins_home/war	This directory contains the expanded web application.

- configure jenkins server 

configure system 
reload configuration from disk 
manage plugins 
system information 
system log 
load statistics 
script console 
manage node 
prepare for shutdown 

- configure jdk 
- configure build tool 
- configure proxy 


# Setting up build jobs 
- free style software project, The freestyle build job is the most flexible and configurable option, and can be used for any type of project

configure sourceware management, SCM configuration options in Jenkins are identical across all sorts of build jobs

In the global options of Jenkins (see Figure 5-14), different Git executables can be set up and used on a per-build basis

Regions (seen in Figure 5-12) are named specific or wildcard paths in the codebase that, even when changed, should not trigger a build.

The default choice is to search for all branch HEADs. If the Gerrit plugin is installed, additional options for building all Gerrit-notified commits are displayed.

Gerrit is an open source web application that facilitates code reviews for project source hosted on a Git version control system. provide side by side comparison 

- maven project 
- monitor an external job 
- multiconfiguration job 

- start a Jenkins build job remotely. You simply invoke a URL of the following form:

http://SERVER/jenkins/job/PROJECTNAME/build

$ wget http://myserver:8080/jenkins/job/gameoflife/build

- build steps 

- build environment variable, makes the following environment variables available to the build script
 
BUILD_NUMBER
The current build number, such as “153”.

BUILD_ID
A timestamp for the current build id, in the format YYYY-MM-DD_hh-mm-ss.

JOB_NAME
The name of the job, such as game-of-life.

BUILD_TAG
A convenient way to identify the current build job, in the form of jenkins-${JOB_NAME}-${BUILD_NUMBER} (e.g., jenkins-game-of-life-2010-10-30_23-59-59).

EXECUTOR_NUMBER
A number identifying the executor running this build among the executors of the same machine. This is the number you see in the “build executor status”, except that the number starts from 0, not 1.

....

<target name="printinfo">
  <property environment="env" />
  <echo message="${env.BUILD_TAG}"/>
</target>

- running groovy scripts, Groovy is not only a popular JVM dynamic language, it is also a convenient language for low-level scripting. The Jenkins Groovy Plugin 

- post build actions 

- notification 



# Automated testing 
- mvn test (for your unit tests) or mvn verify (for unit and integration tests). xUnit Plugin. 

This plugin lets Jenkins process test reports from non-Java tools in a consistent way. It provides support for MSUnit and NUnit (for C# and other .NET languages)

- display test result trends 

- code coverage 

$ mvn cobertura:cobertura

    + Measuring Code Coverage with Clover
Clover is an excellent commercial code coverage tool from Atlassian

- automated acceptance tests 
