Beyond BIOS=De Gruyter;Note=Erxin

# Introduction 
- reference 
https://learning.oreilly.com/library/view/beyond-bios/9781501505836/content/03_Title.xhtml

root repository 
https://github.com/tianocore

https://uefi.org
https://uefi.org/specifications

https://www.tianocore.org

https://github.com/tianocore/edk2/releases

https://www.nasm.us/

ACPI Component Architecture (ACPICA) Downloads
https://acpica.org/downloads

A modern, feature-rich, cross-platform firmware development environment for the UEFI and PI specifications from
https://github.com/tianocore/edk2

https://github.com/tianocore/tianocore.github.io/wiki/EDK-II-Platforms

The ACPI Component Architecture (ACPICA) project provides an operating system (OS)-independent reference implementation of the Advanced Configuration and Power Interface Specification (ACPI).
https://acpica.org/

- concepts 
BIOS, UEFI, Unified Extensible Firmware Interface (UEFI) and Platform Initialization (PI)

compatibility support module (CSM)

System Management Mode (SMM) protocol and infrastructure to abstract out various CPU and chipset implementations

ACPI Source Language (ASL)
https://github.com/tianocore/tianocore.github.io/wiki/Asl-Setup
ASL 2.0 introduction, https://acpica.org/sites/acpica/files/ASL2.0Overview.pdf
window binary tools 
https://acpica.org/downloads/binary-tools

EDK II uses ACPI to describe platform configuration and power management methods to the operating system

TCG EFI platform specification 
https://trustedcomputinggroup.org/resource/tcg-efi-platform-specification/
https://trustedcomputinggroup.org/wp-content/uploads/TCG_EFI_Platform_1_22_Final_-v15.pdf
https://trustedcomputinggroup.org/resources/?

- evolution of the Extensible Firmware Interface (EFI) to the Unified Extensible Firmware Interface (UEFI) and from the Intel Framework specifications to the UEFI Platform Initialization (PI) 

- EFI and UEFI fit into the platform boot flow 

power on > platform initialization > os boot > shutdown 

- Framework-based source-code implementations, such as those derived or dependent upon EDK I (EFI Developer Kit, which can be found on www.tianocore.org. These software artifacts can be recompiled into a UEFI 2.6, PI 1.5-compliant core, such as UDK2015 (the UEFI Developer Kit revision 2015), via the EDK Compatibility Package (ECP).

- terminology 

UEFI Forum. The industry body, which produces UEFI, Platform Initialization (PI).

EDK. The EFI Development Kit, an open sourced project that provides a basic implementation of UEFI, Framework, and other industry standards

UDK. The UEFI Development Kit is the second generation of the EDK (EDK II), which has added a variety of codebase related capabilities and enhancements

Tiano. An obsolete codename for an Intel codebase that implemented the Framework specifications.

- history of EFI 

The Extensible Firmware interface (EFI) project was developed by Intel, with the initial specification released in 1999

The original proposal for booting Itanium was the SAL (System Architectural Layer) SAL_PROC interface, with an encapsulation of the PC/AT BIOS registers

Open Firmware and Advanced RISC Computing (ARC). Ultimately, though, EFI prevailed

With the advent of 64-bit computing on IA-32 (for example, x64) and the industryâ€™s need to have a commonly owned specification, the UEFI 2.0 specification appeared in 2005

The Platform Initialization Working Group (PIWG) is the portion of the UEFI forum that defines the various specifications

PI elements evolve into the UEFI. The left half of the diagram with SEC, PEI, and DXE are described by the PI specifications. BDS, UEFI+OS Loader handshake, and RT are the province of the UEFI specification.

SEC, security 
PEI, pre efi initialization 
DXE, driver execution environment 
BDS, boot device select
RT, runtime 
AL, after life 

- UEFI provides infrastructure to authenticate the user, validate the source and integrity of UEFI executables, network authentication and transport security, audit (including hardware-based measured boot), and administrative controls across UEFI policy objects, including write-protected UEFI variables.

ROMs in host-bus adapters (HBAs)
TCG measurement, trusted computer measurement group

Trusted Computing Group announced that its TPM 2.0 (Trusted Platform Module) Library Specification was approved as a formal international standard under ISO/IEC (the International Organization for Standardization and the International Electrotechnical Commission).
https://trustedcomputinggroup.org/tpm-2-0-library-specification-approved-isoiec-international-standard/

- embedded systems, Many of these operating systems required customized firmware with OS-specific firmware interfaces and did not fit well into the PC firmware ecosystem model.


# Basic UEFI arhictecture 
- concepts

central processing unit (CPU)

	+ UEFI specifications, https://uefi.org/specifications

ACPI specification 

UEFI specification 

UEFI shell specification 

UEFI platform initialization specification 

UEFI platform initialization distribution packaging specification 

Additional information, TCG EFI platform specification 

	+ keys 
	
Objects managed by UEFI-based firmware - used to manage system state, including I/O devices, memory, and events

The UEFI System Table - the primary data structure with data information tables and function calls to interface with the systems.  provides access to all UEFI-provided the services and to all the additional data structure 

Handle database and protocols - the means by which callable interfaces are registered

UEFI images - the executable content format by which code is deployed

Events - the means by which software can be signaled in response to some other activity

Device paths - a data structure that describes the hardware location of an entity, such as the bus, spindle, partition, and file name of an UEFI image on a formatted disk.

Original Equipment Manufacturers (OEMs), Independent BIOS Vendors (IBVs), and Independent Hardware Vendors (IHVs).

TODO; UEFI System Table; https://learning.oreilly.com/library/view/beyond-bios/9781501505836/content/10_chapter02.xhtml#chapter02_3











