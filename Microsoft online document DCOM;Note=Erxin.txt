Microsoft online document DCOM;Note=Erxin

# DCOM 
- COM+ can be used to develop enterprise-wide, mission-critical, distributed applications for Windows.

- COM+ version 1.5 is included in Windows starting with Windows XP, windows server 2003

1.0 is include in windows 2000 

- application level access checks enabled by default

- application pooling 

ConcurrentApps property of the COMAdminCatalogObject object in the Applications collection, COM+ Application Pooling adds scalability for single-threaded processes

- application recycling 

factors such as memory leaks, reliance on third-party code, and nonscalable resource usage, COM+ application recycling provides a simple solution to gracefully shut down 

Application recycling significantly increases the overall stability of your applications.

- COM+ introduces support for COM+ partitions, a feature that allows multiple versions of COM+ applications to be installed and configured on the same machine. 

- COM+ services without components, use the services provided by COM+ without needing to build a component to contain the methods that call those services

- COM+ SOAP service 

expose a COM+ application as an XML web service. You can also transparently use an XML web service, whether deployed using COM+ or not

- configurable isolation level, new TxIsolationLevel property or the Component Services administrative tool to configure an application's isolation level according to need

- Creating private components, IsPrivateComponent, to mark these components as private, take advantage of all COM+ services.

- DTC security settings, MIcrosoft Distributed Transaction Coordinator (DTC), enabling you to customize your security levels

XA transactions as before by creating a registry entry under HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\MSDTC\XADLL, where the value name is the name of the DLL

- Low memory activation gates, COM+ automatically checks memory before creating a COM+ server or object.

https://docs.microsoft.com/en-us/windows/win32/cossdk/com--low-memory-activation-gates

-  COM+ allows you to move and copy your components. This means you can configure a single physical implementation of a component many different times

- Network access, enable network COM+ access

On the Start menu, point to Control Panel, then select Add or Remove Programs.

Click Add/Remove Windows Components.

Select Application Server and click Details.

Check the box next to Enable network COM+ access, and then click OK.

Click Next to complete the Windows Components wizard.

Click Finish to close the wizard.

- Pausing and disabling applications 

An administrator can pause and resume COM+ server applications or disable and enable COM+ library or server applications, or even individual configured components.

- Process dumping, dump the entire state of a process without terminating it

- Process Initialization, create a class that implements the IProcessInitializer interface. When the process starts up, it calls IProcessInitializer::Startup and when shutting down, it calls IProcessInitializer::Shutdown.

- Running COM+ application as NT services, COM+ server application as an NT service. This means that the server can be automatically started or restarted if your application always needs to be running

- Side-by-side (SxS) assemblies allow applications to specify which version of a system DLL or classic COM component to use, such as MDAC, MFS, MSVCRT, or MSXML. For example, if an ASP application relies on MSXML version 2.0, you can ensure that this application still uses MSXML version 2.0 even after service packs are applied to the server.

- Windows Error Reporting (WER) component, available starting in Windows XP. WER enables users to notify Microsoft of application faults, kernel faults, and unresponsive applications.


# Developers overview 
## COM+ Programming overview 
- COM+ improvements 
    + COM+ support neutral apartment threading, which allows a component to have serialized access along with the ability to execute on any thread
    + COM+ support context which is set of properties define the execution environment 
    + COM+ provide role-based security, asynchronous object execution, and a built-in moniker
    
- Application and component administration 

RegDB, stores the metadata that describes components.

COM+ exposes the COM+ catalog, which accesses information in the RegDB

- Automatic transactions 

COM+ supports all Microsoft Transaction Server (MTS) 2.0 semantics and adds the auto-done

Component Services administrative tool


### COM+ application overview 
- hierachy

{COM+ application
    {Component
        {Interface 
            {Method
            }
        }
    }
}

- benefits of COM+ 

a deployment scope for COM components 

a common configuration scope for COM components, security boundaries and queuing 

storage of component attributes 

component dynamic link libraries, loaded into processes (DLLHost.exe) on demand 

managed server processes to host components 

Creation and management of threads used by components 

Access to the context object for resource dispensers, automatic associated with context 

- types of applications 

server applications, runs in its own process, support all COM+ services 

library applictions, run in the process of the client creates it 

application proxies, a set of files containing registration information that allows a client to remotely access a server application. 

COM+ server application, including CLSIDs, ProgIDs, RemoteServerName, and marshaling information, to the client computer.

COM+ preinstalled applications
    NET Utilities
    Analyzer Control Publisher Application
    COM+ Explorer
    COM+ QC Dead Letter Queue Listener
    COM+ Utilities
    IIS In-Process Applications
    IIS Out-Of-Process Pooled Applications
    System Application

- COM+ System Application includes the value EOAC_DISABLE_AAA. This value, which disables activate-as-activator (AAA) activations, is used with the CoInitializeSecurity function when launching the System Application.

EOAC_DISABLE_AAA allows an application that runs under a privileged account

- parts of a COM+ application 

consist of one or more COM components,  exposed by a COM class that specify a contract. , interface semantics, marshaling buffer format

COM interfaces are immutable; the COM contract states that they cannot be modified.

- configured and unconfigured components 
COM component is added to a COM+ appliation is a configured component 

COM components built for COM+ applications are in-process server components. The component must contain a type library (.tlb file) to describe all classes 

unconfigured component is a component that isn't installed in a COM+ application.

    + note 
    
Do not use the same AppID for both a COM+ application and in the registry for an unconfigured component. When the unconfigured component is activated , as activation may retrieve the COM+ application information 

- Developing COM+ application 

COM classes and implementation classes.
Group the classes into components.
Select the set of COM+ services for your component or Component Services administrative tool or the COM+ administration object model

    + create COM+ application 
    
Integrate the components into a COM+ application.

Specify the correct set of attributes for each of the classes, These attributes express the components dependencies on any COM+ services

Configure environment-specific attributes on classes and applications, object pool size, environment specific attributes can be set later by system admin 

Export the app

    + admin COM+ application 

Installing the partially configured COM+ application 

Providing environment-specific attributes

Re-exporting the fully configured COM+ application

Creating an application proxy

- COM+ contexts and threading models 

In COM+, a context is defined as set of run-time properties associated with one or more COM objects to provide services for objects 

In COM+, every COM object is associated with precisely one context as it runs





# Window 32 API reference 
https://docs.microsoft.com/en-us/windows/win32/api/






































































