Penetration testing bootcamp=Jason;Note=Erxin

# Scoping criteria 
- gain intimate knowledge of the ntework for testing 

subnets and ip addresses in the scope of test 

out of scope area 

security devices within the network 

- network diagram 


trunk port vian 
cat3650
fp4140 
wlc2504
isr2951 ucs-e 

- data flow digram, personal identifiable information 

- org chart, pretty sure the CFO will have more access compared to the junior accountant

- building the systems for the penetration test 

https://www.kali.org

https://www.offensive-security.com
 
- pentration system software setup 

Offensive Security at https://www.offensive-security.com/kali-linux-arm-images/.

use xz decompress the kali image 
$ xz-d kali-2.1.2-rpi2.img.xz

put the kali image on 
$ diskutil list 

unmount the disk 
$ diskutil unmountDisk/dev/disk2

ctrl + t
$ sudo dd if=kali-2.1.2-rpi2.imgof=/dev/disk2bs=1m

written to microSD drive and eject 
$ disk utile ject/dev/disk2 

start raspberry pi and boot it up 
username: root 
password: toor 

update password 
Passwd<add your own password> 

update system 
```
apt-get update
apt-get upgrade
apt-get dist-upgrade
```


# Gathering inforamtion 
- utilizing whosis for information gathering 

$ whois -H website-address 

$ whois -h whois.rabd.net -- '-i origin AS36856' | grep route 

- enumerating dns with dnsmap 

- DNSRecon is a handy DNS-based utility that lets you perform various reconnaissance exercises on DNS records

- BIND a DNS server is running will give you some potentially great information. A lot of DNS servers out there are designed to not give up that information or reveal some generic information about its setup

- Nmap does have a little bit of a learning curve

https://nmap.org/book/man.html

- checking DNS recursion with NSE 
$ nmap -sU -p53 --script=dns-recursion NS.XXX.NET

- fingerprinting systems with P0f 

$ P0f is a great little utility to help identify or passively fingerprint another system based on network connections that are being observed by p0f

- Firewalk leverages ICMP error messages and TTL expirations to let us know whether a port is open or not

- detecting a web application firewall 

WAFW00F can detect the presence of a lot of different WAF types. By running the wafw00f command with the -l flag, you can see list of currently defined WAFs

- protocol fuzzing with dotdotpwn, DotDotPwn is a slick multi-protocol fuzzer to discover traversal directory vulnerabilities within web servers. Fuzzing is the testing technique of looking for poor coding or security loopholes in software applications such as web servers or even operating systems

- using netdiscover to find undocumented IPs 

Netdiscover is a great tool for finding potential IP addresses on the network for further examination.

- setting up and maintaining the command and control server 

C&C requirements
Setting up secure connectivity
Inside server SSH setup
C&C server SSH setup
Setting up a reverse SSH tunnel
Stunnel to the rescue verify the automation automatingÂ evidence collection file utilities

- setup secure connectivity, ssh 

SSH is working on both hosts, we need to set up the reverse SSH tunnel. Taking a look at the following figure showing a simplified topology

interal PI <===> firewall <===> internet <===> external C&C 
    ----------------inital outbound ssh with -R 8022 -->
   <---ssh localhost:8022 piggyback on initial connection 

- verifyihg automation 
$ tcpdump host ip 

- split utility, Split is a very handy utility to break up a file into more manageable pieces

$ split –b <size k|m> <filetobesplit> <nameofsplitfiles>

$ ccat <fileaa fileab fileac filead> > <final file name>

- vulnerability scanning and metasplot, Browser Exploitation Framework (BeEF) and Social Engineering ToolkitÂ (SET).

OpenVAS was a fork of Nessus product 

starting the process of scanning with OpenVAS

OpenVAS – Open Vulnerability Assessment Scanner

https://openvas.org/

- get start with metasploit 

https://help.rapid7.com/metasploit/Content/getting-started/product-editions.html


http://www.kb.cert.org/vuls, I can see that it has the same disclosure date as shown in my msfconsole
 
https://www.metasploit.com/

penetration testing tool 

    + tasks that I find very powerful:

Grabbing a shell
Executing a given file on the target host
Clearing and securing remote event logs
Uploading or downloading files to the target host
Kill processes
Grabbing system information
Reading/writing/deleting files

- BeEF uses weaknesses that are found in web browsers for client-side attacks

BeEF server. There is a sample hook that comes with BeEF. It's located at http://YOURBEEFSERVER:3000/hook.js

https://beefproject.com/

window is not supported 

- using SET is a tool that was designed to create social engineering-based attack vectors


# Traffic sniffing and spoofing 
- Wireshark, tcpdump, and WinDump for protocol analysis such as ARP, TCP, and UDP. On the other hand

SSLStrip and dsniff. They change the information coming over the wire to accomplish tasks such as MiTM attacks

- learn the knowledge of ARP, HTTP, TCP, and UDP

- tcpdump for linux 
https://www.tcpdump.org/

- windump for window 

WinDump, you need to make sure WinPcap is installed. If you don't have WinPcap, it is available from WinDump ( http://www.windump.com)

- wireshark 

-  performing ARP spoofing. This will allow us to tell the host to send its traffic to us as the default gateway and to tell the default gateway to send traffic to that host to us

    +  ARP spoofing to accomplish this. Using the arpspoof command, I will be able to poison the ARP cache on both sides with my MAC address to force a change in the traffic flow

    install Arpspoof 
    
    $ sysctl -w net.ipv4.ip_forward=1
    
    $ root@kali:~# sysctl -a list | grep net.ipv4.ip_forward net.ipv4.ip_forward = 1
    
    $ arpspoof -i eth0 -t address address 
    
    client <=== hack (MiTM) ===> server 
    
    use arpspoof both to client and server to accomplish man in the middle attack 
    
- Ethercap is a great tool for performing an MiTM attack using the GUI as opposed to the CLI

- SSLStrip is an attack tool that utilizes the man-in-the-middle functionality to transparently look at HTTPS traffic, hijack it, and return non-encrypted HTTP links to the user in response

$ iptables -t nat -A PREROUTING -p tcp --dport 443 -j REDIRECT --to-ports 8443































    
    
    
    
    
    
    
    
    
    
    
