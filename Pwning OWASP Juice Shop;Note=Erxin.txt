Pwning OWASP Juice Shop;Note=Erxin

# Online document 
- reference 
https://pwning.owasp-juice.shop/

- install from source 
install nodejs 

$ git clone https://github.com/bkimminich/juiceshop.git

$ npm install 

navigate to http://localhost:3000

- automatic saving and resoring hacking progress

- self-healing feature 

- The challenges are rated with a difficulty level between ⭐ and ⭐⭐⭐⭐⭐⭐

- manual progress and settings backup 

Backup and Restore buttons on the Score Board you can save
and later restore your hacking progress

- enable unsafe challenges 

safetyOverride:true 

yaml configuration file 

- hacking tool 

firefox, allow edit and replay request 

chrome, do not allow replay request 

- get hint 

chat on Gitter.im at
https://gitter.im/bkimminich/juice-shop. You can simply log in to Gitter with your
GitHub account

Slack channel at
https://owasp.slack.com/messages/project-juiceshop

- challenges solutions 

The Challenge solutions appendix is there to help you in case you are stuck

- configure rest API endpoint 

Customization feature that allows redressing the UI and
overwriting the product catalog: http://localhost:3000/rest/admin/applicationconfiguration

- tutorial js file 

If enabled, the Hacking Instructor script tutorial-es2015.js (or tutorial-es5.js in
legacy browsers) including all on-screen tutorials is loaded lazily by the Score
Board and the Welcome Banner. You should exclude this file from all your manual
or automated frontend code analysis.

- reference 

reveal your real hacking progress.
https://en.wikipedia.org/wiki/Boilerplate_code 
https://github.com/zaproxy/zap-core-help/wiki 
http://docs.kali.org/introduction/what-is-kali-linux 
http://docs.kali.org/introduction/should-i-use-kali-linux 


# bussiness walk path, happy path of juice-shop
- browser products 

- user login 
url, #/login 

- userregistration 
with url, #/register 

- choosing products to purchase 

url, #/basket 

- user profile 

url /profile

- my saved address 

edit saved address 

- my payment options  

edit crads etc 

- juice shop wallet 

all the bonuses on your purchaes 

- order history 

- privacy policy 

request data export

obtain a copy of all your data saved in juice shop 

- change user password 

url, #/privacy-security/change-password 

- last login 

display the ip from last login 

- request recycling box 

url, #/recycle page, eco-friednly customers to order pre-stamped boxes 

- order tracking, equipped with an order number 
url, #/track-order 

- menu, sidebar emnu 

- customer feedback, invited to leave feedback 

url, #/contact 

- complain, leave a free text message 

url, #/complain 

- support chat, talk to an ai-powered chat bot 

- about us OWASP 

url, #/about 

- photo wall, allows its users to share their memories 

url, #/photo-wall 

- deluxe member ship 

exclusive offers, offers a delux membership to its customer 

- language selection 

- additional help url 

this book.
https://wiki.owasp.org/index.php/Map_execution_paths_through_applicatio
n_(OTG-INFO-007) 
http://xunitpatterns.com/happy%20path.html 

https://owasp.org/www-project-automated-threats-to-web-applications/

# customize app 
- configure 
default.yml 

- security.txt based on https://securitytext.org 

- /promotion screen where a marketing video with subtitles is rendered that hosts the XSS Tier 6 challenge

- challenges section

- Allows to enable and customize the Hacking Instructor tutorial mode

- cft section, Capture-the-Flag mode built into OWASP

- override default setting 

config/ctf.yml 

add necessary sections 

- validate custom configuration 
$ npm run lint:config -- -f /path/to/myConfig.yml

- which will show you the application name registered on Google Cloud Platform: OWASP Juice Shop! There is no way to convince Google to show anything else for obvious trust and integrity reasons

- running juice shop in CTF-mode, use it in Capture-the-flag (CTF) events. 

$ set NODE_ENV=ctf # on Windows
$ export NODE_ENV=ctf # on Linux
$ npm start

- Juice Shop comes with the convenient juice-shop-ctf-cli tool to to simplify the
hosting of CTFs using popular open source frameworks

- non interactive generator mode 

```
ctfFramework: CTFd | FBCTF | RootTheBox
juiceShopUrl: https://juice-shop.herokuapp.com
ctfKey: https://raw.githubusercontent.com/bkimminich/juice-shop/master/ctf.key # can a
countryMapping: https://raw.githubusercontent.com/bkimminich/juice-shop/master/config/
insertHints: none | free | paid
insertHintUrls: none | free | paid # optional for FBCTF
```

- interactive mode 
$ juice-shop-ctf --config myconfig.yml --output challenges.out


- GitHub
(https://github.com/facebook/fbctf) in all their setup methods

- CTF frameworks, CTFd, FBCTF and RootTheBox are not the only possible score servers you can use. Open Source alternatives are for example Mellivora or NightShade.


# Challenge hunting 
- changes 
Name Description
API-only XSS Perform a persisted XSS attack with <iframe src="javascript
Access Log Gain access to any access log file of the server.
Admin
Registration Register as a user with administrator privileges.
Admin Section Access the administration section of the store.
Allowlist
Bypass Enforce a redirect to a page you are not supposed to redire
Arbitrary File
Write Overwrite the Legal Information file.
Bjoern's
Favorite Pet Reset the password of Bjoern's OWASP account via the Fo
Blockchain
Hype Learn about the Token Sale before its official announcemen
Blocked RCE
DoS Perform a Remote Code Execution that would keep a less h
Bonus Payload
Use the bonus payload <iframe width="100%" height="166" scr
url=https%3A//api.soundcloud.com/tracks/771984076&color=%23ff550
</iframe> in the DOM XSS challenge.
Bully Chatbot Receive a coupon code from the support chatbot.
CAPTCHA
Bypass Submit 10 or more customer feedbacks within 10 seconds.
Change
Bender's
Password
Change Bender's password into slurmCl4ssic without using
Christmas
Special Order the Christmas special offer of 2014.
CSP Bypass Bypass the Content Security Policy and perform an XSS at
Client-side
XSS Protection Perform a persisted XSS attack with <iframe src="javascript
Confidential
Document Access a confidential document.
Cross-Site
Imaging Stick cute cross-domain kittens all over our delivery boxes.
CSRF Change the name of a user by performing Cross-Site Requ
DOM XSS Perform a DOM XSS attack with <iframe src="javascript:ale
Database
Schema Exfiltrate the entire DB schema definition via SQL Injection.
Deluxe Fraud Obtain a Deluxe Membership without paying for it.
Deprecated
Interface Use a deprecated B2B interface that was not properly shut
Easter Egg Find the hidden easter egg.98
Name Description
Email Leak Perform an unwanted information disclosure by accessing d
Ephemeral
Accountant Log in with the (non-existing) accountant acc0unt4nt@juice
Error Handling Provoke an error that is neither very gracefully nor consiste
Expired
Coupon Successfully redeem an expired campaign coupon code.
Exposed
Metrics Find the endpoint that serves usage data to be scraped by
Extra
Language Retrieve the language file that never made it into production
Five-Star
Feedback Get rid of all 5-star customer feedback.
Forged
Coupon Forge a coupon code that gives you a discount of at least 8
Forged
Feedback Post some feedback in another users name.
Forged Review Post a product review as another user or edit any user's ex
Forged Signed
JWT Forge an almost properly RSA-signed JWT token that impe
Forgotten
Developer
Backup
Access a developer's forgotten backup file.
Forgotten
Sales Backup Access a salesman's forgotten backup file.
Frontend
Typosquatting Inform the shop about a typosquatting imposter that dug its
GDPR Data
Erasure Log in with Chris' erased user account.
GDPR Data
Theft Steal someone else's personal data without using Injection.
HTTP-Header
XSS Perform a persisted XSS attack with <iframe src="javascript
Imaginary
Challenge Solve challenge #999. Unfortunately, this challenge does no
Kill Chatbot Permanently disable the support chatbot so that it can no lo
Leaked Access
Logs
Dumpster dive the Internet for a leaked password and log in
not qualify as a solution.)
Leaked Unsafe
Product Identify an unsafe product that was removed from the shop
Legacy
Typosquatting Inform the shop about a typosquatting trick it has been a vic
Login Admin Log in with the administrator's user account.99
Name Description
Login Amy Log in with Amy's original user credentials. (This could take
Final Note")
Login Bender Log in with Bender's user account.
Login Bjoern Log in with Bjoern's Gmail account without previously chang
Login CISO Exploit OAuth 2.0 to log in with the Chief Information Secur
Login Jim Log in with Jim's user account.
Login MC
SafeSearch Log in with MC SafeSearch's original user credentials witho
Login Support
Team Log in with the support team's original user credentials with
Manipulate
Basket Put an additional product into another user's shopping bask
Meta Geo
Stalking
Determine the answer to John's security question by lookin
mechanism.
Misplaced
Signature File Access a misplaced SIEM signature file.
Missing
Encoding Retrieve the photo of Bjoern's cat in "melee combat-mode".
Multiple Likes Like any review at least three times as the same user.
Nested Easter
Egg Apply some advanced cryptanalysis to find the real easter e
NoSQL DoS Let the server sleep for some time. (It has done more than
NoSQL
Exfiltration All your orders are belong to us! Even the ones which don't
NoSQL
Manipulation Update multiple product reviews at the same time.
Outdated
Allowlist Let us redirect you to one of our crypto currency addresses
Password
Strength Log in with the administrator's user credentials without prev
Payback Time Place an order that makes you rich.
Poison Null
Byte Bypass a security control with a Poison Null Byte to access
Premium
Paywall Unlock Premium Challenge to access exclusive content.
Privacy Policy Read our privacy policy.
Privacy Policy
Inspection Prove that you actually read our privacy policy.
Product
Tampering Change the href of the link within the OWASP SSL Advan100
Name Description
Reflected XSS Perform a reflected XSS attack with <iframe src="javascript
Repetitive
Registration Follow the DRY principle while registering a user.
Reset Bender's
Password Reset Bender's password via the Forgot Password mechan
Reset Bjoern's
Password Reset the password of Bjoern's internal account via the For
Reset Jim's
Password Reset Jim's password via the Forgot Password mechanism
Reset Morty's
Password Reset Morty's password via the Forgot Password mechanis
Reset Uvogin's
Password Reset Uvogin's password via the Forgot Password mechan
Retrieve
Blueprint Deprive the shop of earnings by downloading the blueprint
SSRF Request a hidden resource on server through server.
SSTi Infect the server with juicy malware by abusing arbitrary com
Score Board Find the carefully hidden 'Score Board' page.
Security Policy Behave like any "white hat" should before getting into the a
Server-side
XSS Protection Perform a persisted XSS attack with <iframe src="javascript
Steganography Rat out a notorious character hiding in plain sight in the sho
Successful
RCE DoS Perform a Remote Code Execution that occupies the serve
Supply Chain
Attack
Inform the development team about a danger to some of th
this vulnerability)
Two Factor
Authentication Solve the 2FA challenge for user "wurstbrot". (Disabling, by
Unsigned JWT Forge an essentially unsigned JWT token that impersonate
Upload Size Upload a file larger than 100 kB.
Upload Type Upload a file that has no .pdf or .zip extension.
User
Credentials Retrieve a list of all user credentials via SQL Injection
Video XSS Embed an XSS payload </script><script>alert(`xss`)</scrip
View Basket View another user's shopping basket.
Visual Geo
Stalking
Determine the answer to Emma's security question by look
mechanism.
Vulnerable
Library Inform the shop about a vulnerable library it is using. (Ment101
Name Description
Weird Crypto Inform the shop about an algorithm or library it should defin
XXE Data
Access Retrieve the content of C:\Windows\system.ini or /etc/passwd
XXE DoS Give the server something to chew on for quite a while.
Zero Stars Give a devastating zero-star feedback to the store.

- challenges

    1. score board from url guessing 
    http://localhost:3000/#/score-board
    
    2. injection 

    christmas special, order the christmas special offer of 2014 
    
    database schema, exfiltrate the entire db schema definition via SQL injection 
    
    ephemeral accountant, log in with the (non-existing) accountant 
    
    login admin, login with the administrator's user account 
    
    login bender, login with bender's user account 
    
    login, jim, login with jim's user account 
    
    nosql dos, let the server sleep for some time 
    
    nosql exfiltration, all your orders are belong to us 
    
    nosql manipulation, update multiple product reviews at the same time 
    
    ssti, infect the server with juicy malware by abusing arbitrary command execution 
    
    user credentials, retrieve a list of all user credentials via sql injection 
    
    + challenge x 

        * christmas special 
        
        * DOM XSS, paste the playload into search field 
        
        <iframe src="javascript:alert(`xss`)">
        
        * access a confidential document 
        
        http://localhost:3000/ftp/legal.md
        
        change the url to 
        
        http://localhost:3000/ftp/
        
        get the acquisitions.md document 

        * Provoke an error that is neithter very gracefull nor consistently handled 
        
        Any request that cannot be properly handled by the server will eventually be passed to a global error handling component. restful API, behaves similarly, passing back a JSON error object with sensitive data, such as SQL query strings
        
            a. Visit http://localhost:3000/rest/qwertz
            
            b. login to the application with ' as email 
            
        will trigger server internal error, display additional dev information. sql query etc. 

        * find the endpoint that serves usage data to be scraped by a popular monitoring system 
        
         scroll through https://prometheus.io/docs/introduction/first_steps

        You should notice several mentions of /metrics as the default path scraped by Prometheus
        http://localhost:3000/metrics
        
        * retrieve the photo of Bjoern's cat in "melee combat-mode"

        <img _ngcontent-akt-c18="" class="image" src="assets/public/images/uploads/😼-#zatschi-#whoneedsfourlegs-1572600969477.jpg" alt="😼 #zatschi #whoneedsfourlegs"> 

        the two # characters in the URL, which are no problem for your OS in a filename, but are interpreted by your browser as HTML anchors
        
        translate the # character to %23 then the image will be displayed 
        
        * redirect you to one of our crypto currency address 
        login any user 
        
        navigate to your basket
        
        open main-es2015.js in devtool, click {} to format the file 
        
        search /redirect?to= 
        
        navigate to any of /redirect?to=https://blockchain.info/address/1AbKfgvw9psQ41NbLi8kufDQTezwG8DRZm

        * review private policy 
        
        login with any user 
        
        choose Privacy & Security from the drop down menu 
        
        you will on  http://localhost:3000/#/privacy-security/privacy-policy
        
        * follow the DRY principle while registering a user 
        
        http://localhost:3000/#/register 
        
        type 12345 input password field 
        type into repeat password field 
        got back to password field and change it into any other 
        submit the form 

        * find the score board page 
        
        search from js, main-es2015.js 
        
        score-board 
        
        path 
        
        * perform a dom xss attach 
        
        add <iframe src="javascript:alert(`xss`)"> input search field 
        
        * give a devastating zero-star feedback to the store 
        
        navigate to contact us 
        
        input a comment text and CAPTCHA
        
        open devtoo and search the submit button 
        
        remove the disabled attribute from the tag 

    + challenges xx

        * login as administrator, by default the first user in the table will be administrator 
        
        email: ' or 1=1--
        password: any thing 

        relative sql:  "SQLITE_ERROR", sql: "SELECT * FROM Users WHERE email = '' AND password = '8fdf397e130a1e324f4b5bdf60090587' AND deletedAt IS NULL"
        
        admin@juice-sh.op

        * view another user's shopping basket 
        
        login as any user 
        
        put products into your shopping basket 
        
        inspect the session storage from devtool 
        
        change the bid in Session Storage from devtool 
        
        navigate to the basket page again 
        
        * receive a coupon code from the support chatbot 
        
        log in as any user 
        
        click support chat in the sidebar menu to visit 
        
        http://localhost:3000/#/chatbot
        
        and keep asking for discount again and again 

        * use a deprecated B2B interface that was not properly shut down 
        
        login 
        
        click Complain in the Contact Use dropdown 
        
        clicking the file upload button for Invoice and browsing some directories 
        
        trying to upload another file 
        
        open the main-es2015, search allowedMinmeType check the list 
        
        click the choose file button 
        
        in the file name field enter *.xml and select any arbitrary xml file < 100KB 
        
        enter some message text and press submit to solve the challenge 
        
        on the javascript console will see a suspicious 410 HTTP error

        * login as administrator
        
        delete all 5 star feedbacks

        * login with MC safesearch's original user credentials, with social engineering 
        
        user name: mc.safesearch@juice-sh.op
        password: Mr. N00dles

        * website define security policy 
        
        http://localhost:3000/security.txt
        
        Request the security policy file from the server at http://localhost:3000/.wellknown/security.txt or http://localhost:3000/security.txt

        * inform the shop about an algorithm or library it should definitely not use the way it does 
        
        user table are hashed with unsalted MD5 
        
        visit http://localhost:3000/#/contact 
        
        submit feedback with one of the following words in the comment, z85, base85, base64, md5 or hashid 
        
        *? solve challenge #999 
        
        inspect cookies in your browsers find a continueCode 
        
        use hashids module in node 
        
        encode 999 (will be 69OxrZ8aJEgxONZyWoz1Dw4BvXmRGkM6Ae9M7k2rK63YpqQLPjnlb5V5LvDj) and send post to 
        
        Send a PUT request to the URL http://localhost:3000/rest/continuecode/apply/69OxrZ8aJEgxONZyWoz1Dw4BvXmRGkM6Ae9M7k2rK63YpqQLPjnlb5V5LvDj
        
        feedback with one of the following words in the comment: z85, base85 , base64 , md5 or hashid 
        
        ``` addition info in the main-es2015.js 
         this.feedback.comment = `${ this.feedbackControl.value } (${ this.authorControl.value })`,
         
         ....
         
         this.feedbackService.find().subscribe(t=>{
            for (let e = 0; e < t.length; e++) t[e].comment = '<span style="width: 90%; display:block;">' + t[e].comment + '<br/> (' + this.stars[t[e].rating] + ')</span>',
            t[e].comment = this.sanitizer.bypassSecurityTrustHtml(t[e].comment),
            this.slideshowDataSource.push({
              url: this.images[e % this.images.length],
              caption: t[e].comment
            })
          }, t=>{
            console.log(t)
          })
          
          this.host = this.hostServer + '/api/Feedbacks'
        ```
        
        * reflect XSS attack 
        
        login 
        
        shopping 
        
        visit order history 
        
        click the "track order" show the delivery status 
        
        the id will be displayed on the screen, it is susceptible to an XSS attack 
        
        attach string <iframe src="javascript:alert(`xss`)"></iframe> to replace the id, click enter url will be http://localhost:3000/#/track-result?id=%3Ciframe%20src%3D%22javascript:alert(%60xss%60)%22%3E        
        
        refresh page 
        
        
        * determine the answer to john's security questions 
        
        find the post from photo wall from j0hNny 
        download the photo 
        check the photo metadata with http://exif.regex.info/exif.cgi 
        check the coordinates 
        search from goole map with the coordinates 
        got to forget your password page 
        fill in john@juice-sh.op as the email and the word in google map "Daniel Boone National Forest"
        click change 
        
        * determine the answer to emma's security question 
        check the photo upload from emma 
        
        emma@juice-sh.op 
        
        zoom in check the company name 
        
        use the forget password to fill in the security question 

        * regist a user with adminstrator privileges 
        
        send a post to http://localhost:3000/api/Users with 
        
        {"email":"anadmin","password":"anadmin","role":"admin"}
        
        application/json as Content-Type 
        
        in firefox pressing Ctrl+Shift+E or by going Menubar -> Tools -> Web Developer -> Network. right click a request and edit and resend 

































