Microsoft online document, overview of window programming in C++;Note=Erxin

# Reference 
https://docs.microsoft.com/en-us/cpp/windows/overview-of-windows-programming-in-cpp?view=msvc-160



# Overview of windows programming in C++ 
- how to use Visual Studio and the MFC/ATL wrapper libraries to create Windows programs.

    + native desktop 
    
    Windows C APIs or Component Object Model (COM) APIs to access the operating system. 

    + C# is less complex, less error-prone, and has a more modern object-oriented API than Win32 or MFC. 
    
    + why to choose c++, we recommend using C++ for desktop applications when you require:

    precise control over memory usage
    the utmost economy in power consumption
    usage of the GPU for general computing
    access to DirectX
    heavy usage of standard C++ libraries
    
    use C++/CLI to enable the application to consume native C++ libraries

    + The Component Object Model (COM) is a specification that enables programs written in different languages to communicate with one another.

    +  Universal Windows Platform (UWP) is the modern Windows API. UWP apps run on any Windows 10 device, use XAML for the user-interface

    + Desktop Bridge

    In Windows 10, you can package your existing desktop application or COM object as a UWP app
    
    + games 
    
    DirectX games can run on the PC or Xbox
    
    https://docs.microsoft.com/en-us/windows/win32/directx
    
    + sql server native client 
    
    + window device drivers 
    
    https://docs.microsoft.com/en-us/windows-hardware/drivers/index
    
    + window services 
    
    A Windows service is a program that can run in the background with little or no user interaction. 
    
    + sdks, libraries and header files 
    
    Visual Studio includes the C Runtime Library (CRT), the C++ Standard Library
    
    these libraries are located in the Visual Studio installation directory under the \VC\ folder

    CRT header files are found in the Windows SDK installation folder.
    
    + vcpkg package manager lets you conveniently install hundreds of third-party open-source libraries 
    
    https://vcpkg.io/

    + microsoft libraries include 
    
    MFC 
    
    ATL 
    
    C++ AMP, accelerated massive paralelism 
    
    concurrency runtime 

    + windows 10 sdk, https://dev.windows.com/downloads/windows-10-sdk
    
    location, Program Files (x86)\Windows Kits is the default location for all versions of the Windows SDK
    
- hilo development introduction 

https://docs.microsoft.com/en-us/previous-versions/msdn10/ff708696(v=msdn.10)
    

# Desktop applications 
- desktop bridge 

Any desktop application in C++ can use C Runtime (CRT) and Standard Library classes and functions, COM objects, and the public Windows functions


# ATL 


# MFC 


# Text and strings in MSVC 
- reference 
https://docs.microsoft.com/en-us/cpp/text/text-and-strings-in-visual-cpp?view=msvc-160



# Resource for creating a game using directx 



# How to use windows 10 sdk 


# Work with resource files 


# Deploy native desktop applications 


# C++ attributes for COM and .net 


# Attribute group 















