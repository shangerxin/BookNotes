Modern Linux=Michael;Note=Erxin

# Introduction to Linux 
- modern environments 

mobile devices 

cloud computing 

internet of things 

diversity of processor architectures 

- specific hardware information about the CPUs in use (output edited to fit space):

$ cat /proc/version 

$ cat /proc/cpuinfo | grep "model name" 2

Linux identifies a process using its process ID

$ cat /proc/$$/status | head -n6

- a ten-thousand-foot view of linux []

- the $$ a special variable that is referring to the current process

- Linux we use a kernel feature called cgroups to provide this kind of isolation

- OSIX, short for Portable Operating System Interface

- UNIX System V Interface Definition (SVID)


# Linux kernel 
- architecture 

hareware 

the kernel 

user land 

- interface between kernal and hardware 

user space {shell, ssdh, grep, terminal, dislay service, curl}
|
syscalls 
|
V
system space {processes, memory, networking, filesystems, devices}
hardware {cpus, ram, rom, nic, hdd, ssd etc.}

- a dedicated tool called dmidecode that interacts with the BIOS.

- cpu information 
$ lscpu 

- cpu architecture 

x86 
arm 
risc-v, An up-and-coming player, RISC-V (pronounced risk five) is an open RISC standard that was originally developed by the University of California, Berkeley

- kernel component 

process management 
memory management 
networking 
filesystems 
management of character devices and drivers 

- process management 
sessions 
process groups 
processes , pid 
threads 
tasks, task_struct 


# Shells and scripting 
- Shell navigation and editing shortcutsAction	Command	Note

Move cursor to start of line	Ctrl+a - 
Move cursor to end of line		Ctrl+e -
Move cursor forward one character	Ctrl+f	-
Move cursor back one character	Ctrl+b
Move cursor forward one word 	Alt+f 	Works only with  left Alt	
Move cursor back one word 		Alt+b
Delete current character		Ctrl+d
Delete character left of cursor	Ctrl+h
Delete word left of cursor		Ctrl+w
Delete everything right of cursor	Ctrl+k
Delete everything left of cursor	Ctrl+u
Clear screen					Ctrl+l
Cancel command					Ctrl+c
Undo							Ctrl+_   bash only	
Search history					Ctrl+r	Some shells 
Cancel search					Ctrl+g	Some shells

- The Fish shell describes itself as a smart and user-friendly command-line shell.
- Z-shell, or zsh, is a Bourne-like shell with a powerful completion system and rich theming support.
- Oil shell 
- murex 
- nushell 
- powershell 
- tmux is a flexible and rich terminal multiplexer that you can bend to your needs

tmuxinator 
byobu 
zellij 
dvtm 
3mux 

- scripting, linting and testing scripts 

formatting your script with shfmt




# Acces control 
- Discretionary access control With discretionary access control (DAC), the idea is to restrict access to resources based on the identity of the user.
- Mandatory access control is based on a hierarchical model representing security levels. Users are assigned a clearance level, and resources are assigned a security label. 
- user ID 
UID 0 Is root
UID 1 to 999 Are reserved for system users
UID 65534 Is user nobody—used, for example, for mapping remote users to some well-known ID

```
$ id -u
2016796723
```

- Managing users locally 
```
User database
	

/etc/passwd

Group database
	

/etc/group

User passwords
	

/etc/shadow

Group passwords
	

/etc/gshadow
```


have a look at a concrete example:
```
$ cat /etc/passwd
root:x:0:0:root:/root:/bin/bash 
```
The login shell to use. To prevent interactive logins, use /sbin/nologin.
The user’s home directory; this defaults to /.
User information such as full name or contact data like phone number. 
The user’s primary group (GID); see also /etc/group.
The UID. Note that Linux reserves UIDs below 1000 for system usage.
The user’s password, with the x character meaning that the (encrypted) 
The username, which must be 32 characters or fewer.
- centralized user management 

- file permissions
Read (r)
Write (w)
Execute (x)

```
$ ls -al
total 0
-rw-r--r--  1  mh9  devs  9  Apr 12 11:42  test
```
File name
Last modified time stamp
File size in bytes
Group the file belongs to
File owner
Number of hard links
File mode

File types used in modeSymbol	Semantics
A regular file (such as when you do touch abc)
b Block special file
c Character special file
C High-performance (contiguous data) file
d A directory
l A symbolic link
p A named pipe (create with mkfifo)
s A socket
? Some other (unknown) file type

- file permission 
--- None	0
--x Execute	1
-w-	Write	2
-wx	Write and execute 3
r--	Read	4
r-x	Read and execute	5
rw-	Read and write	6
rwx	Read, write, execute 7

- Process Permissions

The real UID is the UID of the user that launched the process. 
The Linux kernel uses the effective UID to determine permissions the process has when accessing shared resources such as message queues
Saved set-user-IDs are used in suid cases where a process can assume privileges by switching its effective UID between the real UID and the saved set-user-ID. 
These Linux-specific IDs are used to determine permissions for file access. 

- advanced permission management, process capabilities

Privileged processes, bypassing the kernel permission checks, with an effective UID of 0 (aka root)
Unprivileged processes, with a nonzero effective UID, for which the kernel does permission checks

useful capabilitiesCapability	Semantics

CAP_CHOWN	Allows user to make arbitrary changes to files’ UIDs/GIDs
CAP_KILL	Allows sending of signals to processes belonging to other users
CAP_SETUID	Allows changing the UID
CAP_SETPCAP	Allows setting the capabilities of a running process
CAP_NET_ADMIN	Allows various network-related actions, such as interface config
CAP_NET_RAW		Allows using RAW and PACKET sockets
CAP_SYS_CHROOT	Allows calling chroot
CAP_SYS_ADMIN	Allows system admin operations, including mounting filesystems
CAP_SYS_PTRACE	Allows using strace to debug processes
CAP_SYS_MODULE	Allows loading kernel modules

- access control lists 

grep -i acl /boot/config* where you’d hope to find a POSIX_ACL=Y somewhere in the output to confirm it.
Take advantage of capabilities rather than relying on setuid



# Filesystems 
- basics 

Inodes In a filesystem, inodes store metadata about files, such as size, owner, location, date, and permissions. 

here’s how to see what drives, partitions, and volumes are present in your system
$ lsblk --exclude 7

Drive A (physical) block device such as a hard disk drive (HDD) or a solid-state drive (SSD)
Partition You can logically split up drives into partitions, a set of storage sectors. 
Volume A volume is somewhat similar to a partition, but it is more flexible, and it is also formatted for a specific filesystem.
Super block When formatted, filesystems have a special section in the beginning that captures the metadata of the filesystem.
Inodes In a filesystem, inodes store metadata about files, such as size, owner, location, date, and permissions. 

List filesystems but exclude squashfs types
$ findmnt -D -t nosquashfs

look at individual filesystem objects
stat myfile

- low level filesystem and block device commands 

lsblk 			List all block devices
fdisk, parted   Manage disk partitions
blkid    		Show block device attributes such as UUID
hwinfo			Show hardware information
file -s			Show filesystem and partition information
stat, df -i, ls -i		Show and list inode-related information

df -Th, check file system type 

- the virtual file system

different file systems 

	+ Local filesystems, such as ext3, XFS, FAT, and NTFS
	
	+ In-memory filesystems, such as tmpfs
	
	+ Pseudo filesystems like procfs
	
	+ Networked filesystems, such as NFS, Samba, Netware

- system syscalls making up the vfs interface 

Category	Example syscalls

Inodes		chmod, chown, stat

Files		open, close, seek, truncate, read, write

Directories  chdir, getcwd, link, unlink, rename, symlink

Filesystems  mount, flush, chroot

Others		mmap, poll, sync, flock

- logical volume manager 

Logical volume manager (LVM) uses a layer of indirection between physical entities (such as drives or partitions) and the file system


	+ PV management tools Physical volumes (PV)

lvmdiskscan

pvdisplay

pvcreate

pvscan

	+ VG management tools  Volume groups (VG)

vgs

vgdisplay

vgcreate

vgextend

	+ LV management tools Logical volumes (LV)

lvs

lvscan

lvcreate

-  file system operation 

	+ create 

$ mkfs -t ext4 /dev/some_vg/some_lv 

	+ mount a file systems, means attaching it to the file system tree 

$ mount -t ext4,tmpfs 

- common filesystem layouts, man hier command to learn about your concrete setup.

	+ pseudo filesystems, Meet pseudo filesystems: they only pretend to be filesystems so that we can interact with them in the usual manner (ls, cd, cat), but really they are wrapping some kernel interface. 

	+ procfs Linux inherited the /proc filesystem (procfs) from UNIX. T

Per-process information in procfs (most notable)Entry	Type	Information

attr	Directory	Security attributes

cgroup	File		Control groups

cmdline	File		Command line

cwd		Link		Current working directory

environ	File		Environment variables

exe		Link			Executable of the process

fd		Directory	File descriptors

io		File			Storage I/O (bytes/char read and written)

limits		File		Resource limits

mem		File	Memory used

mounts	File	Mounts used

net		Directory	Network stats

stat		File	Process status

syscall		File	Syscall usage

task	Directory	Per-task (thread) information

timers	File	Timers information

$ cat /proc/self/net/arp

	+ sysfs
	
the /sys filesystem (sysfs) is a Linux-specific, structured way for the kernel to expose select information 

	+ devfs 
	
The /dev filesystem (devfs) hosts device special files, representing devices ranging from physical devices 

- regular files some popular filesystems in greater detail.

Name 	year  file  volume		file number  file name 
ext2	1993  2tb 	32tb 		1018 		255 characters

ext3 	2001

ext4 	2008 

btrfs 	2009 

XFS		2001 

ZFS		2006

NTFS 	1997 

vfat 	1995

- In-Memory Filesystems There are a number of in-memory filesystems available

debugfs 

loopfs 

pipefs 

sockfs 

swapfs 

tmpfs 

- copy on write file ssytems 

- a building block for container images

unionfs 

overlayfs 

aufs Another attempt to implement an in-kernel union mount, AUFS (short for advanced multilayered unification filesystem

btrfs, Short for b-tree filesystem (and pronounced butterFS or betterFS), btrfs is a CoW initially designed by Oracle Corporation.



# Application package management 
- basics 

	+ program 
	
	+ process 
	
	+ daemon Short for daemon process, sometimes called service, this is a background process that provides a certain function to other processes. 
	
	+ application A program including its dependencies. Usually a substantial program, including a user interface.

	+ package A file that contains programs and configurations; used to distribute software applications.
	
	+ package manager 
	
	+ supply chain 
	
	+ booting 
	
- linux start process 

power on -> UEFI or BIOS -> boot loadre -> kernel -> init -> user space 

System V–style init programs (or SysV init for short) were the traditional init system in Linux. Linux inherited SysV from Unix

- systemd was initially an init system, a replacement for initd, but today it’s a powerful supervisor that includes functions such as logging, network configuration, and network time synchronization.

Providing a uniform way to manage startup across distros, service configuration 

- units 

service units 

target units 

mount units 

timer units 

socket 

device 

swap 

automount 

path 

snapshot 

slice 

scope 

	+ following:

/lib/systemd/system		Package-installed units
/etc/systemd/system		System admin–configured units
/run/systemd/system		Nonpersistent runtime modifications

- management with systemctl  interact with systemd to manage services is systemctl.


systemctl enable XXXXX.service		Enable the service; ready to be started

systemctl daemon-reload				Reload all unit files and re-create entire dependency tree

systemctl start XXXXX.service		Start the service

systemctl stop XXXXX.service		Stop the service

systemctl restart XXXXX.service		Stop and then start the service

systemctl reload XXXXX.service		Issue reload command to service; falls back to restart

systemctl kill XXXXX.service		Stop service execution

systemctl status XXXXX.service		Get a short summary of service state including some log lines

- systemd tools 

bootctl			Allows you to check the boot loader status and manage available boot loaders.
timedatectl		Allows you to set and view time- and date-related information.
coredumpctl		Enables you to process saved core dumps. Consider this tool when you’re troubleshooting.

- systemd-journald daemon, providing a centralized location for all messages logged by systemd components

greeter.service (in any directory, could be a temporary one):

[Unit]
Description=My Greeting Service 1

[Service]
Type=oneshot
ExecStart=/home/mh9/greeter.sh 2

- high level overview linux package management 

	+ traditional 
	
		* high level 
		zypper 
		yum 
		aptitude 
		apt 
		apt-get 

		* low level 
		
		RPM 	.rpm 
		dpkg 	.deb 
		Pacman 
		
	+ containers 
	
	Docker 
	duildah 
	podman 
	containerd 
	
	OCI image 
	
	+ Modern 
	Flatpak 	Flatpak 
	Snappy 		.snap 
	Homebrew 	.tar.gz
	APK 		.apk 
	
- linux namespace 

clone 

unshare 

setns 

- linux cgroups 

Where namespaces are about visibility, cgroups provide a different kind of functionality: they are a mechanism to organize process groups

With cgroup v1, the community had an ad hoc approach, adding new cgroups and controllers as needed. T

cgroup v2 is a total rewrite of cgroups with the lessons learned from v1

cpuset controller Is similar to the v1 version

rdma controller Regulates the distribution and accounting of remote direct memory access (RDMA) resources



# Networking 
- TCP IP layers 

App 
User data 
Application layer 
Transport layer 
Internet layer With the Internet Protocol (IP), this layer focuses on routing; that is, it supports sending packets between machines
Link layer 

- 

$ ifconfig

$ ip link show

$ arp 

address resolution protocol 

$ ip neigh

ip command to show the cache of mapping MAC addresses 

$ iw dev wlp1s0 info 

- ipv4 

One way to write IPv4 addresses is to split up the 32-bit into four 8-bit segments

	+ ip header 
	
The IP header format as per RFC 791

RFC 1918 defines private IP ranges. A private IP range means that the IP addresses in it are not routable  https://oreil.ly/2Ijxk

$ ip addr show

- ipv6 

ICMP in action by testing the reachability of a website with ping


Alternatively, you can use gping, which can ping multiple targets at the same time

- transportation layer 

Well-known ports (from 0 to 1023)

Registered ports (from 1024 to 49151)

Ephemeral ports (from 49152 to 65535) These cannot be registered. They can be used for automatically allocating a temporary port 

$ nmap -A localhost 

- sockets 

overview of the TCP sockets in use on the system:

$ ss -s

lsof with -c to specifically select a process by name as well as limit to UDP with -i
$ lsof -c chrome -i udp| head -5 

DNS is a worldwide, hierarchical naming system for hosts and services on the internet. While there are many related RFCs

- DNS Lookups

With all the infrastructure in place, mainly nameservers and resolvers

$  host -a localhost

$ dig mhausenblas.info

- application layer 

can use curl, a powerful and popular tool to interact with any kind of URLs,

- network file system 

A widely supported and used way to share files from a central location over the network is via network file system (NFS), originally developed by Sun Microsystems in the early 1980s

$ sudo mount nfs.example.com:/source_dir /opt/target_mount_dir

- sharing with windows 

Windows machines in your local network and want to share it, you can use the Server Message Block (SMB)

Microsoft-owned successor, Common Internet File System (CIFS).

- advance network topics 

whois is a client for the whois directory service that you can use to look up registration and user information.

$  whois ietf.org

- The Dynamic Host Configuration Protocol (DHCP) is a network protocol that enables automatic assignment of an IP address to a host.

- The Network Time Protocol (NTP) is for synchronizing clocks of computers over a network. For example, using the ntpq command, a standard NTP query program, you could make an explicit time

$ ntpq -p

- Wireshark and tshark

If you want to do low-level network traffic analysis

$ sudo tshark -i wlp1s0 tcp

- other tools 

socat 			Establishes two bidirectional byte streams and enables the transferring of data between the endpoint.
geoiplookup		Allows you to map an IP to a geographic region.
Tunnels			An easy-to-use alternative to VPNs and other site-to-site networking solutions. Enabled by such tools as inlets.
BitTorrent		A peer-to-peer system that groups files into a package called a torrent. 



# Observability 
- linux performance observability tools 

strace 			system call interface 
ltrace 			system library 
sopensnoop 
perf 
Ftrace 
LTTng 
BCC 
bpftrace 
ext4dist 
ext4slower 
iostat
biosnoop 
biolatency 
biotop 
blktrace 

ss sstat
gethostlatency 
execsnoop 
mpstat
profile 
runglen 
offcputime 
softirqs 
top 
atop 
vmstat 
tcplife 
tcpretrans 
updconnect 
tcpdump 
perf 
tiptop 
mdflush 
hardirqs 
cirticalstat 
nicstat 
numastat DRAM 
tiptop 
perf 
TURBOSTAT 
SHOWBOOT 
RDMSR 
sar /proc 
dmesg 
dstat 

- observability context is the OODA loop (observe–orient–decide–act). It offers a structured way to test a hypothesis based on observed data and act upon it

- logging 

Linux’s central log directory (output shortened for readability):

$ ls -al /var/log
$ tail -f /var/log/syslog
$ someprocess | tee -a some.log

Syslog is a logging standard for a range of sources, from the kernel to daemons to user space.
Syslog format as per RFC 5424


syslog-ng An enhanced log daemon that you can use as a drop-in replacement for syslogd

rsyslog	Extends the Syslog protocol and can also be used with systemd

- journalctl, In “systemd”, we briefly touched upon a component that is part of the systemd ecosystem, responsible for log management:

- Monitoring is the capturing of system and application metrics for a variety of reasons

$ uptime

$ free -h 

$ vmstat

$ iostat 

$ ss -atup

$ lsof 
stands for “list open files” 


glances  A powerful hybrid that covers devices in addition to the usual resources
guider	 An integrated performance analyzer that allows you to display and graph a range of metrics
neoss	 For network traffic monitoring; an ss replacement that offers a nice TUI
mtr		 For network traffic monitoring; a more powerful alternative to traceroute (see “Routing” for details on traceroute)

- instrumentation, You can use StatsD, with client-side libraries available for a number of programming languages, such as Ruby, Node.js, Python, and Go. StatsD is nice, but it has a few limitations, especially in dynamic environments

- Prometheus and Grafana combo is something you may want to consider for advanced observability.

use the node exporter to expose a range of system metrics, from CPU to memory and network.




# Advance topics 
- Signals were originally developed as a way for the kernel to notify user space processes about a certain event. 

$  while true ; do sleep 1 ; done &

- common signal 

SIGHUP   Tell a daemon process to reread its config file

SIGINT	User interruption from keyboard

...

- Named Pipes

In “Streams”, we talked about pipes (|) that you can use to pass data from one process to another by connecting the stdout

$ mkfifo examplepipe 

- virtual machines 

The Kernel-based Virtual Machine (KVM) is a Linux-native virtualization solution for x86 hardware that supports

- unix domain sockets 

Domain sockets come in three flavors: stream-oriented (SOCK_STREAM), datagram-oriented (SOCK_DGRAM), and sequenced-packet (SOCK_SEQPACKET). The addressing works based on filesystem pathnames. 

- Firecracker

Firecracker is a VMM that can manage KVM instances 

- Modern Linux Distros

The Red Hat family (RHEL, Fedora, and CentOS/Rocky) Flatcar describes itself as a container-nativ  Red Hat acquired CoreOS (the company), it announced the intention to merge the CoreOS Linux with Red Hat’s own Project Atomic 2

The Debian-based family (Ubuntu, Mint, Kali, Parrot OS, elementary OS, etc.) Bottlerocket is a Linux-based operating system developed by AWS and meant for hosting containers. 

The SUSE family (openSUSE and Enterprise)

Gentoo

Arch Linux

RancherOS is a Linux distro where everything is a container managed by Docker. 

- security topics 

Kerberos is an authn suite developed by the Massachusetts Institute of Technology in the 1980s. Today, it’s formally specified in RFC 4120

KDC plays (a single point of failure) and its strict time requirements (it requires clock synchronization between the client and the server via NTP).

NixOS

NixOS is a source-based Linux distro, taking a functional approach to package management and system configuration









