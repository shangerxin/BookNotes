SQL and Relational Theory 3rd edition=C.J.Date;Note=Erxin

# introduction
- references
An Introduction to Database Systems, 8th edition

https://learning.oreilly.com/library/view/sql-and-relational/9781491941164/
- contact author
permissions@oreilly.com


# chapter 1 
- setting the scene
- relational issues that sql isn't too clear on
    + what databases relations and tuples really are
    + the difference between relation values and relation variables
    + the relevance of predicates and propositions
    + the importance of attribute names 
    + the crucial role of integrity constraints
    + the information principle and its significance
- a review of the original model
- relational model at least one candidate key
- integrity features, 
- relational operation, insert, delete and update
    + restrict, Returns a relation containing all tuples from a specified relation that satisfy a specified condition.
    + project, Returns a relation containing all (sub)tuples that remain in a specified relation after specified attributes have been removed.
    + product, Returns a relation containing all possible tuples that are a combination of two tuples, one from each of two specified relations.
    + intersect, Returns a relation containing all tuples that appear in both of two specified relations. (Actually intersect, like product, is also a special case of join, as we’ll see in Chapter 6.) 
    + union, Returns a relation containing all tuples that appear in either or both of two specified relations. 
    + difference, Returns a relation containing all tuples that appear in the first and not the second of two specified relations. 
    + natural join, Returns a relation containing all possible tuples that are a combination of two tuples, one from each of two specified relations, such that the two tuples contributing to any given result tuple have a common value for the common attributes of the two relations
    
- the running example, use suppliers and parts database as the example database in this book
    + suppliers, relation S denotes suppliers
        * SNO, each supplier has one supplier number
        * SNAME
        * STATUS, represent the status of suppliers
    + parts, relation P denotes parts
        * PNO, each kinds of part has one partr number
        * PNAME, one name
        * COLOR
        * WEIGHT
        * CITY
    + shipments, relation SP denotes shipments
        * SNO, each shipment have one supplier number
        * PNO, one part number
        * QTY, one quantity
    
- MODEL vs implementation
    + the model, is what the user has to know
    + the implementation is the user doesn't have to know
    + definition, a data model is an abstract, self-contained logical definition
    + a data model , isa model of data especially the perissitent data 
- properties of relations
    + relational operation always produce a result without duplicate tuples
    + all logical difference are big differences
    + every subset of a tuple is a tuple
    + every subset of a heading is a heading 
    + every subset of a body is a budoy
    + two tuple are equal if and only if they involve exactly the same attributes
- base vs derived relations
    + base relation should be created as table
    + derived relations should be created as view
    
    create view view_name as (select ....)
    
- relations vs relvars
    + a logical difference between relation values and relation variables
    + relation value are brieviate to relation, reference to the value of any table
    + abbreviate relation variable to relvar, reference to any database table
    
- values vs varaibles
    + value, call an individual constance
    + variable is a holder for a representation of a value

- concluding remarks
    + declarative means the system does the work
    + the procedural means the user does the work
    + relational model supports declarative queries, declarative updates, declarative view definitions, declarative integrity


# chapter 2 types and domains
- 
















    