SAFe® for DevOps Practitioners=Robert Wen;Note=Erxin

# Preface 
- DevOps and the Scaled Agile Framework® (SAFe®) are about extending agility beyond the team.

- Software Development Lifecycle (SDLC) and their methodologies

- General Data Protection Regulation (GDPR)) or industry-specific (for example, the Health Insurance Portability and Accountability Act (HIPAA)) regulatory standards

- SAFe® is one of the more popular adopted platforms used to incorporate the Agile mindset and practices according to recent State of Agile surveys

- each comprised of a Scrum Master, Product Owner, and 3 to 9 additional team members—join together to form a team of teams called an Agile Release Train (ART)

release train engineer (ART) 
production management (PM)
system architect (SA)

{Team PO SM}, {Team PO SM}, {Team PO SM} ... 
{Sys.Arc PM RTE}

Release Train Engineer (RTE)  Chief Scrum Master of the ART
Product Management (PM): PM is responsible for guiding the evolution of the product by creating and maintaining a product vision
System Architect (SA): The SA maintains the architecture of the product by creating architectural work called enablers. They act as the focal point for teams on the ART in terms of balancing emergent design from the teams with the intentional architecture beginnings of the product.

- the aspects of this include 

Modeling the DevOps approach using Culture, Automation, Lean Flow, Measurement, and Recovery (CALMR)
Setting up and maintaining value streams
Applying the CD pipeline against the value stream
Including built-in quality and security in the process

DevOps. The letters, and the factors they represent, are set out here:

(C)ulture
(A)utomation
(M)easurement
(S)haring

- Non-Functional Requirements (NFRs) such as security, reliability, performance, and compliance. 



# Culture of shared responsibility 
- six responses, as follows:

Suppression: Preventing the person from spreading the word about the discovery
Encapsulation: Ignoring the person who discovered the bad finding
Public relations: Minimizing the impact of the discovery
Local fix: Fixing only the immediate problem with no investigation of related issues
Global fix: Fixing the problem wherever it occurs
Inquiry: Thorough investigation of the root cause

- Global Product Development System (GPDS), which allowed the creation of new car models utilizing a global platform.



# Automation for efficiency and quality 
- Agile Release Train (ART).

In a nutshell, the following topics will be covered in this chapter:

Pipelines and toolchains
Continuous integration
Continuous deployment
DevOps topologies
The system team

- Test scenarios 

Sanity testing is running a small set of functional tests to verify code features
Smoke testing usually involves running short, high-level functional tests to gain confidence in a new build or a new deployment
Regression testing is a more extensive execution of functional tests to verify that new code features work with the existing system functionality


- behavior driven development 

given: initial condition 
when: input for the test 
then: desired behavior 

- following metrics:

CPU utilization
Memory utilization
Storage utilization
The number of processes
Network statistics
Application state

- elaborated here at https://web.devopstopologies.com:

- These site reliability engineers (SREs) handle the support of production environments, mostly by developing software to keep the resources and services running.

- Container-driven collaboration
Because containers abstract many of the infrastructure details, most collaboration between Dev and Ops is not necessary. 

- developers and the database administrators (DBAs) may be crucial. To enable that collaboration, the database developers in Dev work closely with the DBAs

- The system team is the team on the ART that is responsible for the tooling and automation of the Continuous Delivery Pipeline. 



# Leveraging learning flow to keep the work moving 
- 