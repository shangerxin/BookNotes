Domain-Driven Design=Addison;Note=Erxin

# Preface 
- design versus development process 

Development is iterative.

Developers and domain experts have a close relationship.


# Putting the domain model to work 
- utility of a model in domain driven design 
the model and the heart of the design shape each other 

the model is the backbone of a language used by all teams 

the model is distilled knowledge 

There are systematic ways of thinking that developers can employ to search for insight and produce effective models.

- crunching knowledge 

Binding the model and the implementation.

Cultivating a language based on the model

Developing a knowledge-rich model. the object had behavior and enforced rules 

Distilling the model.

Brainstorming and experimenting.

- document should complete code and speech 


# building blocks of a model driven design 
- navigation map of the mode driven design 

mdd -> |services 
        | entities -----------> |-------------------> | factories  
        |                       |repositories ------> |
        |                       | aggregates  ------> |
        |                       | 
        | value objects ------> |
        | layered architecture 
        | smart UI 

- isolating the domain 

    + layered architecture 
    
user interface 
---------------
application 
---------------
domain 
---------------
infrastructure 

    + Objects carry out responsibilities consistent with their layer and are more coupled to other objects in their layer
    
UI              application         domain               infrastructure
    
controller ->   service <---------->Account, Account <-> unit of work manager  <-> o-r mapper 

- a model expressed in software 

1. Imposing a traversal direction

2. Adding a qualifier, effectively reducing multiplicity

3. Eliminating nonessential associations

- entities, Many objects are not fundamentally defined by their attributes, but rather by a thread of continuity and identity

- design the identity operation, ID symbol is created and stored as an attribute of the ENTITY, it is designated immutable.

- value objects, many objects have no conceptual identity, these objects describe some characteristic of a thing 

Address is a VALUE OBJECT.

VALUE OBJECT as immutable. Donâ€™t give it any identity and avoid the design complexities necessary














