Bash Cookbook, 2nd Edition=Carl Albing;Note=Erxin


# Reference 
https://learning.oreilly.com/library/view/bash-cookbook-2nd/9781491975329/


# Beginning bash 
- decoding the prompt 

a trailing $ in the prompt generally means you are logged in as a regular user, while a trailing # means you are root. 

a ~ means you are in your home directory. 

a user named jp on a machine called adams, sitting in the home directory.
jp@adams:~$

jp@adams:/tmp$ 

- where your are 
$ pwd 

- finding and running commands 
$ type which
$ type ls 
$ type -a ls 
$ which which 

$ apropos music 
apropos searches manpage names and descriptions for regular expressions supplied as arguments.

$ help type
$ man which
$ man apropos
$ man locate
$ man slocate
$ man find
$ man ls

./ since the current working directory is usually not in your $PATH for security reasons 

- get information about files 
$ touch /tmp/new_file 
$ ls -l /tmp/new_file 
$ state /tmp/sample_file 
$ file /tmp/sample_file
/tmp/sample_file: empty

stat, file, and find all have many options that control the output format

$ find /tmp/ -name sample_file -printf '%m %n %u %g %t %p'
644 1 jp jp Sun Dec 18 15:04:12 2005 /tmp/sample_file

- show hidden dot files 

$ ls -a 
$ ls -d 

construct your wildcard in such a way that . and .. donâ€™t match:
$ grep -l 'PATH' ~/.[!.]*

.[!.]* is a filename expansion pattern where [] denotes a list of characters to match, but the leading ! negates the list

- using shell quoting 

